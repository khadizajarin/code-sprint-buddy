{
  "version": 3,
  "sources": ["../src/background.ts"],
  "sourcesContent": ["let sprintStartTime: number | null = null;\nlet sprintDuration = 1 * 60 * 1000; // 1 minute for testing\nlet sprintTimer: number | null = null;\n\n// \u2705 Function to play sound directly in background\nconst playSound = () => {\n  const audio = new Audio(chrome.runtime.getURL(\"notification.mp3\"));\n  audio.play().catch((err) => {\n    console.warn(\"Failed to play audio in background:\", err);\n  });\n};\n\nfunction endSprint() {\n  chrome.notifications.create({\n    type: \"basic\",\n    iconUrl: \"icons/icon48.png\",\n    title: \"Sprint Finished!\",\n    message: \"20-minute sprint complete! Time to take a break. \uD83E\uDDD8\u200D\u2640\uFE0F\",\n  });\n\n  // \u2705 Play sound directly\n  playSound();\n\n  // Optional: Notify popup if it's open\n  chrome.runtime.sendMessage({ type: \"SPRINT_ENDED\" });\n\n  sprintStartTime = null;\n  sprintTimer = null;\n}\n\nchrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\n  if (request.type === \"START\") {\n    if (!sprintStartTime) {\n      sprintStartTime = Date.now();\n\n      sprintTimer = setTimeout(() => {\n        endSprint();\n      }, sprintDuration);\n\n      chrome.notifications.create({\n        type: \"basic\",\n        iconUrl: \"icons/icon48.png\",\n        title: \"Sprint Started!\",\n        message: \"Your 20-minute coding sprint has begun. Let\u2019s go! \uD83D\uDE80\",\n      });\n\n      sendResponse({ status: \"started\" });\n    }\n  }\n\n  if (request.type === \"STATUS\") {\n    if (sprintStartTime) {\n      const elapsed = Date.now() - sprintStartTime;\n      const timeLeft = Math.max(0, Math.floor((sprintDuration - elapsed) / 1000));\n      sendResponse({ running: true, timeLeft });\n    } else {\n      sendResponse({ running: false, timeLeft: sprintDuration / 1000 });\n    }\n    return true; // keep message channel open\n  }\n});\n"],
  "mappings": "mBAAA,IAAIA,EAAiC,KACjCC,EAAiB,EAAI,GAAK,IAC1BC,EAA6B,KAG3BC,EAAY,IAAM,CACR,IAAI,MAAM,OAAO,QAAQ,OAAO,kBAAkB,CAAC,EAC3D,KAAK,EAAE,MAAOC,GAAQ,CAC1B,QAAQ,KAAK,sCAAuCA,CAAG,CACzD,CAAC,CACH,EAEA,SAASC,GAAY,CACnB,OAAO,cAAc,OAAO,CAC1B,KAAM,QACN,QAAS,mBACT,MAAO,mBACP,QAAS,8EACX,CAAC,EAGDF,EAAU,EAGV,OAAO,QAAQ,YAAY,CAAE,KAAM,cAAe,CAAC,EAEnDH,EAAkB,KAClBE,EAAc,IAChB,CAEA,OAAO,QAAQ,UAAU,YAAY,CAACI,EAASC,EAAQC,IAAiB,CAoBtE,GAnBIF,EAAQ,OAAS,UACdN,IACHA,EAAkB,KAAK,IAAI,EAE3BE,EAAc,WAAW,IAAM,CAC7BG,EAAU,CACZ,EAAGJ,CAAc,EAEjB,OAAO,cAAc,OAAO,CAC1B,KAAM,QACN,QAAS,mBACT,MAAO,kBACP,QAAS,kEACX,CAAC,EAEDO,EAAa,CAAE,OAAQ,SAAU,CAAC,IAIlCF,EAAQ,OAAS,SAAU,CAC7B,GAAIN,EAAiB,CACnB,IAAMS,EAAU,KAAK,IAAI,EAAIT,EACvBU,EAAW,KAAK,IAAI,EAAG,KAAK,OAAOT,EAAiBQ,GAAW,GAAI,CAAC,EAC1ED,EAAa,CAAE,QAAS,GAAM,SAAAE,CAAS,CAAC,CAC1C,MACEF,EAAa,CAAE,QAAS,GAAO,SAAUP,EAAiB,GAAK,CAAC,EAElE,MAAO,EACT,CACF,CAAC",
  "names": ["sprintStartTime", "sprintDuration", "sprintTimer", "playSound", "err", "endSprint", "request", "sender", "sendResponse", "elapsed", "timeLeft"]
}
